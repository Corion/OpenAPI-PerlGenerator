package JIRA::API::Field 0.01;
# DO NOT EDIT! This is an autogenerated file.
use 5.020;
use Moo 2;
use experimental 'signatures';
use Types::Standard qw(Enum Str Bool Num Int Object ArrayRef);
use MooX::TypeTiny;

=head1 NAME

JIRA::API::Field -

=head1 SYNOPSIS

  my $obj = JIRA::API::Field->new();
  ...

=cut

sub as_hash( $self ) {
    return { $self->%* }
}

=head1 PROPERTIES

=head2 C<< contextsCount >>

Number of contexts where the field is used.

=cut

has 'contextsCount' => (
    is       => 'ro',
    isa      => Int,
);

=head2 C<< description >>

The description of the field.

=cut

has 'description' => (
    is       => 'ro',
    isa      => Str,
);

=head2 C<< id >>

The ID of the field.

=cut

has 'id' => (
    is       => 'ro',
    isa      => Str,
    required => 1,
);

=head2 C<< isLocked >>

Whether the field is locked.

=cut

has 'isLocked' => (
    is       => 'ro',
);

=head2 C<< isUnscreenable >>

Whether the field is shown on screen or not.

=cut

has 'isUnscreenable' => (
    is       => 'ro',
);

=head2 C<< key >>

The key of the field.

=cut

has 'key' => (
    is       => 'ro',
    isa      => Str,
);

=head2 C<< lastUsed >>

Information about the most recent use of a field.

=cut

has 'lastUsed' => (
    is       => 'ro',
    isa      => Object,
);

=head2 C<< name >>

The name of the field.

=cut

has 'name' => (
    is       => 'ro',
    isa      => Str,
    required => 1,
);

=head2 C<< projectsCount >>

Number of projects where the field is used.

=cut

has 'projectsCount' => (
    is       => 'ro',
    isa      => Int,
);

=head2 C<< schema >>

The schema of a field.

=cut

has 'schema' => (
    is       => 'ro',
    isa      => Object,
    required => 1,
);

=head2 C<< screensCount >>

Number of screens where the field is used.

=cut

has 'screensCount' => (
    is       => 'ro',
    isa      => Int,
);

=head2 C<< searcherKey >>

The searcher key of the field. Returned for custom fields.

=cut

has 'searcherKey' => (
    is       => 'ro',
    isa      => Str,
);


1;
