package JIRA::API::JqlFunctionPrecomputationBean 0.01;
# DO NOT EDIT! This is an autogenerated file.
use 5.020;
use Moo 2;
use experimental 'signatures';
use Types::Standard qw(Str Bool Num Int Object ArrayRef);
use MooX::TypeTiny;

sub as_hash( $self ) {
    return { $self->%* }
}

=head1 PROPERTIES

=head2 C<< arguments >>

=cut

has 'arguments' => (
    is       => 'ro',
    isa      => ArrayRef[Str],
);

=head2 C<< created >>

=cut

has 'created' => (
    is       => 'ro',
    isa      => Str,
);

=head2 C<< field >>

=cut

has 'field' => (
    is       => 'ro',
    isa      => Str,
);

=head2 C<< functionKey >>

=cut

has 'functionKey' => (
    is       => 'ro',
    isa      => Str,
);

=head2 C<< functionName >>

=cut

has 'functionName' => (
    is       => 'ro',
    isa      => Str,
);

=head2 C<< id >>

=cut

has 'id' => (
    is       => 'ro',
    isa      => Str,
);

=head2 C<< operator >>

=cut

has 'operator' => (
    is       => 'ro',
    isa      => Str,
);

=head2 C<< updated >>

=cut

has 'updated' => (
    is       => 'ro',
    isa      => Str,
);

=head2 C<< used >>

=cut

has 'used' => (
    is       => 'ro',
    isa      => Str,
);

=head2 C<< value >>

=cut

has 'value' => (
    is       => 'ro',
    isa      => Str,
);


1;
