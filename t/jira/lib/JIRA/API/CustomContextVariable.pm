package JIRA::API::CustomContextVariable 0.01;
# DO NOT EDIT! This is an autogenerated file.
use 5.020;
use experimental 'signatures';
use stable 'postderef';
use Carp 'croak';

=encoding utf8

=head1 NAME

JIRA::API::CustomContextVariable - Factory class

=head1 SYNOPSIS

  my $obj = JIRA::API::CustomContextVariable->new($args);
  ...

This is a factory class that returns one of the following types
based on the C<< type >> field:

C<< issue >> - L<< JIRA::API::IssueContextVariable >>

C<< json >> - L<< JIRA::API::JsonContextVariable >>

C<< user >> - L<< JIRA::API::UserContextVariable >>


=cut

use JIRA::API::IssueContextVariable;
use JIRA::API::JsonContextVariable;
use JIRA::API::UserContextVariable;


our %classes = (
    'issue' => 'JIRA::API::IssueContextVariable',
    'json' => 'JIRA::API::JsonContextVariable',
    'user' => 'JIRA::API::UserContextVariable',
);

sub new( $class, $data ) {
    if( ! exists $data->{ 'type' } ) {
        croak "Need a 'type' field";
    };
    my $type = $data->{ 'type' };
    croak "Unknown type '$type' in field 'type'"
        unless exists $classes{ $type };
    
    return $classes{ $type }->new( $data );
}

1;
