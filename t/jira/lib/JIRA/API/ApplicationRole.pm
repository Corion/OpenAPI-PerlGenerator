package JIRA::API::ApplicationRole 0.01;
# DO NOT EDIT! This is an autogenerated file.
use 5.020;
use Moo 2;
use experimental 'signatures';
use stable 'postderef';
use Types::Standard qw(Enum Str Bool Num Int Object ArrayRef);
use MooX::TypeTiny;

=head1 NAME

JIRA::API::ApplicationRole -

=head1 SYNOPSIS

  my $obj = JIRA::API::ApplicationRole->new();
  ...

=cut

sub as_hash( $self ) {
    return { $self->%* }
}

=head1 PROPERTIES

=head2 C<< defaultGroups >>

The groups that are granted default access for this application role. As a group's name can change, use of `defaultGroupsDetails` is recommended to identify a groups.

=cut

has 'defaultGroups' => (
    is       => 'ro',
    isa      => ArrayRef[Str],
);

=head2 C<< defaultGroupsDetails >>

The groups that are granted default access for this application role.

=cut

has 'defaultGroupsDetails' => (
    is       => 'ro',
    isa      => ArrayRef[Object],
);

=head2 C<< defined >>

Deprecated.

=cut

has 'defined' => (
    is       => 'ro',
);

=head2 C<< groupDetails >>

The groups associated with the application role.

=cut

has 'groupDetails' => (
    is       => 'ro',
    isa      => ArrayRef[Object],
);

=head2 C<< groups >>

The groups associated with the application role. As a group's name can change, use of `groupDetails` is recommended to identify a groups.

=cut

has 'groups' => (
    is       => 'ro',
    isa      => ArrayRef[Str],
);

=head2 C<< hasUnlimitedSeats >>

=cut

has 'hasUnlimitedSeats' => (
    is       => 'ro',
);

=head2 C<< key >>

The key of the application role.

=cut

has 'key' => (
    is       => 'ro',
    isa      => Str,
);

=head2 C<< name >>

The display name of the application role.

=cut

has 'name' => (
    is       => 'ro',
    isa      => Str,
);

=head2 C<< numberOfSeats >>

The maximum count of users on your license.

=cut

has 'numberOfSeats' => (
    is       => 'ro',
    isa      => Int,
);

=head2 C<< platform >>

Indicates if the application role belongs to Jira platform (`jira-core`).

=cut

has 'platform' => (
    is       => 'ro',
);

=head2 C<< remainingSeats >>

The count of users remaining on your license.

=cut

has 'remainingSeats' => (
    is       => 'ro',
    isa      => Int,
);

=head2 C<< selectedByDefault >>

Determines whether this application role should be selected by default on user creation.

=cut

has 'selectedByDefault' => (
    is       => 'ro',
);

=head2 C<< userCount >>

The number of users counting against your license.

=cut

has 'userCount' => (
    is       => 'ro',
    isa      => Int,
);

=head2 C<< userCountDescription >>

The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.

=cut

has 'userCountDescription' => (
    is       => 'ro',
    isa      => Str,
);


1;
