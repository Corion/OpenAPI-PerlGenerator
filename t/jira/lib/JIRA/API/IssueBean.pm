package JIRA::API::IssueBean 0.01;
# DO NOT EDIT! This is an autogenerated file.
use 5.020;
use Moo 2;
use experimental 'signatures';
use Types::Standard qw(Str Bool Num Int Object ArrayRef);
use MooX::TypeTiny;

=head1 NAME

JIRA::API::IssueBean -

=head1 SYNOPSIS

  my $obj = JIRA::API::IssueBean->new();
  ...

=cut

sub as_hash( $self ) {
    return { $self->%* }
}

=head1 PROPERTIES

=head2 C<< changelog >>

Details of changelogs associated with the issue.

=cut

has 'changelog' => (
    is       => 'ro',
);

=head2 C<< editmeta >>

The metadata for the fields on the issue that can be amended.

=cut

has 'editmeta' => (
    is       => 'ro',
);

=head2 C<< expand >>

Expand options that include additional issue details in the response.

=cut

has 'expand' => (
    is       => 'ro',
    isa      => Str,
);

=head2 C<< fields >>

=cut

has 'fields' => (
    is       => 'ro',
    isa      => Object,
);

=head2 C<< fieldsToInclude >>

=cut

has 'fieldsToInclude' => (
    is       => 'ro',
    isa      => Object,
);

=head2 C<< id >>

The ID of the issue.

=cut

has 'id' => (
    is       => 'ro',
    isa      => Str,
);

=head2 C<< key >>

The key of the issue.

=cut

has 'key' => (
    is       => 'ro',
    isa      => Str,
);

=head2 C<< names >>

The ID and name of each field present on the issue.

=cut

has 'names' => (
    is       => 'ro',
    isa      => Object,
);

=head2 C<< operations >>

The operations that can be performed on the issue.

=cut

has 'operations' => (
    is       => 'ro',
);

=head2 C<< properties >>

Details of the issue properties identified in the request.

=cut

has 'properties' => (
    is       => 'ro',
    isa      => Object,
);

=head2 C<< renderedFields >>

The rendered value of each field present on the issue.

=cut

has 'renderedFields' => (
    is       => 'ro',
    isa      => Object,
);

=head2 C<< schema >>

The schema describing each field present on the issue.

=cut

has 'schema' => (
    is       => 'ro',
    isa      => Object,
);

=head2 C<< self >>

The URL of the issue details.

=cut

has 'self' => (
    is       => 'ro',
    isa      => Str,
);

=head2 C<< transitions >>

The transitions that can be performed on the issue.

=cut

has 'transitions' => (
    is       => 'ro',
    isa      => ArrayRef[Object],
);

=head2 C<< versionedRepresentations >>

The versions of each field on the issue.

=cut

has 'versionedRepresentations' => (
    is       => 'ro',
    isa      => Object,
);


1;
