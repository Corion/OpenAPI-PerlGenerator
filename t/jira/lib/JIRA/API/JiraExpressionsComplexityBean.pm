package JIRA::API::JiraExpressionsComplexityBean 0.01;
# DO NOT EDIT! This is an autogenerated file.
use 5.020;
use Moo 2;
use experimental 'signatures';
use stable 'postderef';
use Types::Standard qw(Enum Str Bool Num Int Object ArrayRef);
use MooX::TypeTiny;

=head1 NAME

JIRA::API::JiraExpressionsComplexityBean -

=head1 SYNOPSIS

  my $obj = JIRA::API::JiraExpressionsComplexityBean->new();
  ...

=cut

sub as_hash( $self ) {
    return { $self->%* }
}

=head1 PROPERTIES

=head2 C<< beans >>

The number of Jira REST API beans returned in the response.

=cut

has 'beans' => (
    is       => 'ro',
    required => 1,
);

=head2 C<< expensiveOperations >>

The number of expensive operations executed while evaluating the expression. Expensive operations are those that load additional data, such as entity properties, comments, or custom fields.

=cut

has 'expensiveOperations' => (
    is       => 'ro',
    required => 1,
);

=head2 C<< primitiveValues >>

The number of primitive values returned in the response.

=cut

has 'primitiveValues' => (
    is       => 'ro',
    required => 1,
);

=head2 C<< steps >>

The number of steps it took to evaluate the expression, where a step is a high-level operation performed by the expression. A step is an operation such as arithmetic, accessing a property, accessing a context variable, or calling a function.

=cut

has 'steps' => (
    is       => 'ro',
    required => 1,
);


1;
