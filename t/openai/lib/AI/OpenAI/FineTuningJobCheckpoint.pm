package AI::OpenAI::FineTuningJobCheckpoint 0.01;
# DO NOT EDIT! This is an autogenerated file.

use 5.020;
use Moo 2;
use experimental 'signatures';
use stable 'postderef';
use Types::Standard qw(Enum Str Bool Num Int HashRef ArrayRef);
use MooX::TypeTiny;

=encoding utf8

=head1 NAME

AI::OpenAI::FineTuningJobCheckpoint -

=head1 SYNOPSIS

  my $obj = AI::OpenAI::FineTuningJobCheckpoint->new();
  ...

=cut

sub as_hash( $self ) {
    return { $self->%* }
}

=head1 PROPERTIES

=head2 C<< created_at >>

The Unix timestamp (in seconds) for when the checkpoint was created.

=cut

has 'created_at' => (
    is       => 'ro',
    isa      => Int,
    required => 1,
);

=head2 C<< fine_tuned_model_checkpoint >>

The name of the fine-tuned checkpoint model that is created.

=cut

has 'fine_tuned_model_checkpoint' => (
    is       => 'ro',
    isa      => Str,
    required => 1,
);

=head2 C<< fine_tuning_job_id >>

The name of the fine-tuning job that this checkpoint was created from.

=cut

has 'fine_tuning_job_id' => (
    is       => 'ro',
    isa      => Str,
    required => 1,
);

=head2 C<< id >>

The checkpoint identifier, which can be referenced in the API endpoints.

=cut

has 'id' => (
    is       => 'ro',
    isa      => Str,
    required => 1,
);

=head2 C<< metrics >>

Metrics at the step number during the fine-tuning job.

=cut

has 'metrics' => (
    is       => 'ro',
    isa      => HashRef,
    required => 1,
);

=head2 C<< object >>

The object type, which is always "fine_tuning.job.checkpoint".

=cut

has 'object' => (
    is       => 'ro',
    isa      => Enum[
        "fine_tuning.job.checkpoint",
    ],
    required => 1,
);

=head2 C<< step_number >>

The step number that the checkpoint was created at.

=cut

has 'step_number' => (
    is       => 'ro',
    isa      => Int,
    required => 1,
);


1;
