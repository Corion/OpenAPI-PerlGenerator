package AI::OpenAI::CreateMessageRequest 0.01;
# DO NOT EDIT! This is an autogenerated file.

use 5.020;
use Moo 2;
use experimental 'signatures';
use stable 'postderef';
use Types::Standard qw(Enum Str Bool Num Int HashRef ArrayRef);
use MooX::TypeTiny;

=encoding utf8

=head1 NAME

AI::OpenAI::CreateMessageRequest -

=head1 SYNOPSIS

  my $obj = AI::OpenAI::CreateMessageRequest->new();
  ...

=cut

sub as_hash( $self ) {
    return { $self->%* }
}

=head1 PROPERTIES

=head2 C<< attachments >>

A list of files attached to the message, and the tools they should be added to.

=cut

has 'attachments' => (
    is       => 'ro',
    isa      => ArrayRef[HashRef],
);

=head2 C<< content >>

=cut

has 'content' => (
    is       => 'ro',
    required => 1,
);

=head2 C<< metadata >>

Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.

=cut

has 'metadata' => (
    is       => 'ro',
    isa      => HashRef,
);

=head2 C<< role >>

The role of the entity that is creating the message. Allowed values include:
- `user`: Indicates the message is sent by an actual user and should be used in most cases to represent user-generated messages.
- `assistant`: Indicates the message is generated by the assistant. Use this value to insert messages from the assistant into the conversation.

=cut

has 'role' => (
    is       => 'ro',
    isa      => Enum[
        "user",
        "assistant",
    ],
    required => 1,
);


1;
