package AI::OpenAI::CreateCompletionResponse 0.01;
# DO NOT EDIT! This is an autogenerated file.

use 5.020;
use Moo 2;
use experimental 'signatures';
use stable 'postderef';
use Types::Standard qw(Enum Str Bool Num Int HashRef ArrayRef);
use MooX::TypeTiny;

=encoding utf8

=head1 NAME

AI::OpenAI::CreateCompletionResponse -

=head1 SYNOPSIS

  my $obj = AI::OpenAI::CreateCompletionResponse->new();
  ...

=cut

sub as_hash( $self ) {
    return { $self->%* }
}

=head1 PROPERTIES

=head2 C<< choices >>

The list of completion choices the model generated for the input prompt.

=cut

has 'choices' => (
    is       => 'ro',
    isa      => ArrayRef[HashRef],
    required => 1,
);

=head2 C<< created >>

The Unix timestamp (in seconds) of when the completion was created.

=cut

has 'created' => (
    is       => 'ro',
    isa      => Int,
    required => 1,
);

=head2 C<< id >>

A unique identifier for the completion.

=cut

has 'id' => (
    is       => 'ro',
    isa      => Str,
    required => 1,
);

=head2 C<< model >>

The model used for completion.

=cut

has 'model' => (
    is       => 'ro',
    isa      => Str,
    required => 1,
);

=head2 C<< object >>

The object type, which is always "text_completion"

=cut

has 'object' => (
    is       => 'ro',
    isa      => Enum[
        "text_completion",
    ],
    required => 1,
);

=head2 C<< system_fingerprint >>

This fingerprint represents the backend configuration that the model runs with.

Can be used in conjunction with the `seed` request parameter to understand when backend changes have been made that might impact determinism.

=cut

has 'system_fingerprint' => (
    is       => 'ro',
    isa      => Str,
);

=head2 C<< usage >>

Usage statistics for the completion request.

=cut

has 'usage' => (
    is       => 'ro',
    isa      => HashRef,
);


1;
